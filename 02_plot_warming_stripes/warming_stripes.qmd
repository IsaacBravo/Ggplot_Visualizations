---
title: "Data Visualization I"
author: "Isaac Bravo"
date: '`r format(Sys.Date())`'
format:
  html:
    toc-title: Contents
    toc: true
    toc-location: left
    smooth-scroll: true
editor: visual
---

## 1. Introduction {#sec-chap-introduction}

**Summary.** This tutorial explains how to implement a "warming_stripes" plot in R using <code>ggplot</code>.

**Keywords.** R, data manipulation, data visualization.

**Objectives.** Implement the warming stripes plot in R.

## 2. Installing libraries {#sec-chap-libraries}

```{r install-libraries-r, warning=FALSE, message=FALSE}
library(hockeystick)
library(gganimate)
library(ggplot2)
library(magrittr)
library(dplyr)
library(readr)
library(DT)
```

## 3. Load dataset {#sec-chap-dataset}

```{r load-dataset-r, warning=FALSE, message=FALSE}
GLB_Ts_dSST <- read_csv("data/GLB.Ts+dSST.csv")
```

```{r echo=FALSE}
datatable(
  head(GLB_Ts_dSST),
  caption = htmltools::tags$caption(
    style = 'caption-side: bottom; text-align: center;',
    'Table 1: ', htmltools::em('This is a caption for the GLB_Ts_dSST dataset.')
  )
)
```

## 4. Formatting data {#sec-chap-format}

```{r format-dataset-r, warning=FALSE, message=FALSE}
# Convert Year variable to Date class
GLB_Ts_dSST$Year <- as.Date(paste0(GLB_Ts_dSST$Year, "-01-01"))

# Convert J-D variable to numeric
GLB_Ts_dSST$`J-D` <- as.numeric(GLB_Ts_dSST$`J-D`)
GLB_Ts_dSST <- GLB_Ts_dSST %>% select(Year, `J-D`) 
GLB_Ts_dSST <- GLB_Ts_dSST[1:(nrow(GLB_Ts_dSST)-1), ]
```

## 5. Plotting data {#sec-chap-plot}

```{r plot-dataset-r, warning=FALSE, message=FALSE}
plot <- ggplot(GLB_Ts_dSST, aes(x = Year, y = 0, fill = `J-D`)) +
  geom_tile(height = 2.6) +
  scale_x_date(date_breaks = "20 years", date_labels = "%Y", expand = c(0, 0),
               name = "AVG. TEMPERATURE SCORE\n(across all countries)"
  ) +
  scale_y_continuous(expand = c(0, 0)) +
  scale_fill_gradientn(colours = rev(RColorBrewer::brewer.pal(11, "RdBu")), limits = c(-0.48, 1.02),
                       breaks = c(-0.48, 0, 1.02),
                       labels = c("Lower\n\ntemperature",
                                  "Average worldwide temperature score\n\n(1899-2022)", "Higher\n\ntemperature"),
                       guide = guide_colourbar(nbin = 300,
                                               ticks.colour = "black", 
                                               ticks.linewidth = 0.5,
                                               frame.colour = "black")) +
  guides(fill = guide_colorbar(barwidth = 35)) +
  labs(title = "Global surface temperature anomaly",
       subtitle = "Relative to 1880-1980 average",
       caption = 'Source: NASA Goddard Institute for Space Studies\n\nhttps://data.giss.nasa.gov/gistemp/ | Plot: @Isaac Bravo') +
  theme_classic() +
  theme(axis.line = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(colour = "white"),
        axis.ticks = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_text(margin = margin(t = 20, b = 0),
                                    colour = "white"),
        plot.title = element_text(colour = "white"),
        plot.subtitle = element_text(colour = "white"),
        plot.caption = element_text(colour = "white", margin = margin(t = 20)),
        legend.position = "bottom",
        legend.key.width = unit(15, units = "cm"),
        legend.key.height = unit(.9, units = "cm"),
        
        legend.title = element_blank(), legend.text = element_text(colour = "white"),
        legend.margin = margin(t = 0), legend.background = element_blank(),
        plot.background = element_rect(fill = "black", colour = "black"),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20)
  ) 
```

## 6. Creating animation plot {#sec-chap-animation}

```{r animation-dataset-r, warning=FALSE, message=FALSE}
animation <- plot + transition_time(Year) +
  shadow_mark(past = TRUE, future = FALSE, color = "transparent") +
  ease_aes('linear') +
  exit_reset()
```

```{r}
output_file <- "animation.gif"
animate(animation, nframes = 200, width = 900, height = 600, 
        renderer = gifski_renderer(loop = FALSE), fps = 10)
anim_save(output_file)
```
